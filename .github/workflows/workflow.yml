name: Wiktionary IPA Extractor

on:
  # Manual trigger via the GitHub Actions tab
  workflow_dispatch:
  
  # Trigger the build and release of binaries only when Go code changes
  push:
    paths:
      - '**/*.go'  # Trigger when any Go code changes
  
  # Trigger the nightly data ingestion job to check the RSS feed and process the data
  schedule:
    - cron: '0 0 * * *'  # Run nightly

permissions:
  packages: write
  contents: write

jobs:
  # Job for building binaries (Mac and Linux) and attaching them to the release when Go code changes
  build-and-release-binaries:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up Docker container with Golang installed
      - name: Set up Docker
        run: |
          docker pull golang:latest

      # Step 3: Build Linux binary
      - name: Build Linux binary
        run: |
          docker run --name go-build-linux -v ${{ github.workspace }}:/workspace -w /workspace golang:latest /bin/bash -c "go build -o wiktionary-ipa-extract cmd/wiktionary-ipa-extract/main.go"

      # Step 4: Build Mac binary
      - name: Build Mac binary
        run: |
          docker run --name go-build-mac -v ${{ github.workspace }}:/workspace -w /workspace golang:latest /bin/bash -c "GOOS=darwin GOARCH=arm64 go build -o wiktionary-ipa-extract-mac-arm64 cmd/wiktionary-ipa-extract/main.go"

      # Step 5: Create Release if a tag is pushed
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./wiktionary-ipa-extract-linux
            ./wiktionary-ipa-extract-mac

  # Job for processing the Wiktionary data based on the RSS feed using the binary
  process-data:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Fetch RSS and check timestamp
      - name: Fetch RSS and check timestamp
        id: check_dump
        run: |
          latest_dump_date=$(curl -s https://dumps.wikimedia.org/enwiktionary/latest/enwiktionary-latest-pages-articles.xml.bz2-rss.xml | grep -oP '(?<=<pubDate>).*?(?=</pubDate>)')
          last_run_date=$(cat last_run_timestamp.txt || echo "none")
          
          if [ "$last_run_date" != "$latest_dump_date" ]; then
            echo "New dump found, proceeding with extraction."
            echo "$latest_dump_date" > last_run_timestamp.txt
          else
            echo "No new dump available, exiting."
            exit 0
          fi

      # Step 3: Check if binary exists, otherwise build it
      - name: Check and build binary if necessary
        run: |
          if [ ! -f ./wiktionary-ipa-extract ]; then
            docker pull golang:latest
            docker run --name go-build-linux -v ${{ github.workspace }}:/workspace -w /workspace golang:latest /bin/bash -c "go build -o wiktionary-ipa-extract cmd/wiktionary-ipa-extract/main.go"
          fi

      # Step 4: Process the latest data dump using the binary
      - name: Process Wiktionary Dump
        run: |
          curl https://dumps.wikimedia.org/enwiktionary/latest/enwiktionary-latest-pages-articles.xml.bz2 | ./wiktionary-ipa-extract --bz -o enwiktionary-latest-pages-articles-${{ steps.check_dump.outputs.latest_dump_date }}.jsonl

      - name: Gzip the JSONL file
        run: |
          gzip -9 enwiktionary-latest-pages-articles-${{ steps.check_dump.outputs.latest_dump_date }}.jsonl

      # Step 5: Create Release for processed JSONL file
      - name: Release Processed JSONL File
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            enwiktionary-latest-pages-articles-${{ steps.check_dump.outputs.latest_dump_date }}.jsonl.gz
